#ifndef LOCAL_MSG_SENDER
#define LOCAL_MSG_SENDER

#include "../declarations.dl"

// Base case
noMsgSenderLocal(id, nil) :- argument(id, blk, _), function(blk, _).
noMsgSenderLocal(id, stack) :- validIdStack(id, stack),
                               (const(id, _);
                                builtinVariable(id, name), name != "SENDER").

// For expressions
noMsgSenderLocal(id, stack) :- noMsgSenderLocal(id_var, stack),
                               (assign(id, id_var);
                                uop(id, id_var, _)).
noMsgSenderLocal(id, stack) :- bop(id, id_lhs, id_rhs, _),
                               noMsgSenderLocal(id_lhs, stack),
                               noMsgSenderLocal(id_rhs, stack).

// For argument combinations
noMsgSenderLocal(id, stack) :- transferArgument(id_transfer, id_src, idx),
                               noMsgSenderLocal(id_src, stack),
                               argument(id, blk, idx),
                               (!notEmptyBlock(blk_src)
                                ;
                                lastStmt(id_destroy, blk_src),
                                !selfdestruct(id_destroy, _)),
                               (goto(id_transfer, blk_src, blk);
                                branch(id_transfer, _, blk_src, blk, _, _);
                                branch(_, id_transfer, blk_src, _, blk, _)).

// For loads
noMsgSenderLocal(id, stack) :- load(id, field), noMsgSenderGlobal(field, id, stack).

#endif
