#ifndef GUARDS
#define GUARDS

#include "declarations.dl"

// Base guard definition
notGuard(id, stack) :- const(id, "True"),
                       validIdStack(id, stack),
                       depth(stack, num),
                       num < 3.
notGuard(id, stack) :- const(id, "False"),
                       validIdStack(id, stack),
                       depth(stack, num),
                       num < 3.
notGuard(id, stack) :- bop(id, id_lhs, id_rhs, op),
                       compOp(op),
                       msgSender(id_lhs),
                       taintedLocal(id_rhs, blk, _, stack),
                       !msgSender(id_rhs),
                       blockStmt(blk, id).
notGuard(id, stack) :- bop(id, id_lhs, id_rhs, op),
                       compOp(op),
                       taintedLocal(id_lhs, blk, _, stack),
                       !msgSender(id_lhs),
                       msgSender(id_rhs),
                       blockStmt(blk, id).
notGuard(id, stack) :- bop(id, id_lhs, id_rhs, op),
                       compOp(op),
                       !msgSender(id_lhs),
                       !msgSender(id_rhs),
                       validIdStack(id, stack),
                       depth(stack, num),
                       num < 3.

// Combination of guards within a require/if-else
notGuard(id, stack) :- assign(id, id_var),
                       notGuard(id_var, stack).
notGuard(id, stack) :- uop(id, id_var, op),
                       boolOp(op),
                       notGuard(id_var, stack).
notGuard(id, stack) :- bop(id, id_lhs, _, op),
                       boolOp(op),
                       notGuard(id_lhs, stack),
                       taintedLocal(id_lhs, blk, __, stack),
                       blockStmt(blk, id).
notGuard(id, stack) :- bop(id, _, id_rhs, op),
                       boolOp(op),
                       notGuard(id_rhs, stack),
                       taintedLocal(id_rhs, blk, __, stack),
                       blockStmt(blk, id).
notGuard(id, stack) :- bop(id, id_lhs, id_rhs, op),
                       boolOp(op),
                       notGuard(id_lhs, stack),
                       notGuard(id_rhs, stack).

#endif
