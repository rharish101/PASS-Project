#ifndef FUNC_RETURN
#define FUNC_RETURN

#include "../declarations.dl"

// Getting guards
argTaint(blk, stack) :- return(_, blk_src),
                        jump(id_jump, _, blk_fn, blk),
                        blockFollows(blk_src, blk_fn),
                        (lastStmt(id_last, blk_src), !selfdestruct(id_last, _);
                         !notEmptyBlock(blk_src)),
                        (argTaint(blk_src, [id_jump, stack]),
                         notContains(stack, id_jump)
                         ;
                         argTaint(blk_src, _),
                         validBlkStack(blk, stack),
                         !notContains(stack, id_jump)).

// Getting guards
noMsgSenderLocal(id, stack) :- transferArgument(id_return, id_src, idx),
                               argument(id, blk, idx),
                               return(id_return, blk_src),
                               jump(id_jump, _, blk_fn, blk),
                               blockFollows(blk_src, blk_fn),
                               (lastStmt(id_last, blk_src),
                                !selfdestruct(id_last, _)
                                ;
                                !notEmptyBlock(blk_src)),
                               (noMsgSenderLocal(id_src, [id_jump, stack]),
                                notContains(stack, id_jump)
                                ;
                                noMsgSenderLocal(id_src, _),
                                validIdStack(id, stack),
                                !notContains(stack, id_jump)).

noMsgSenderGlobalBlkStart(field, blk, stack) :- return(_, blk_src),
                                                jump(id_jump, _, blk_fn, blk),
                                                blockFollows(blk_src, blk_fn),
                                                (lastStmt(id_last, blk_src),
                                                 !selfdestruct(id_last, _)
                                                 ;
                                                 !notEmptyBlock(blk_src)),
                                                (noMsgSenderGlobalBlkEnd(field, blk_src, [id_jump, stack]),
                                                 notContains(stack, id_jump)
                                                 ;
                                                 noMsgSenderGlobalBlkEnd(field, blk_src, _),
                                                 validBlkStack(blk, stack),
                                                 !notContains(stack, id_jump)).

// Getting local taints
taintedLocal(id, blk, src, stack) :- transferArgument(id_return, id_src, idx),
                                     argument(id, blk, idx),
                                     return(id_return, blk_src),
                                     jump(id_jump, _, blk_fn, blk),
                                     blockFollows(blk_src, blk_fn),
                                     (lastStmt(id_last, blk_src),
                                      !selfdestruct(id_last, _)
                                      ;
                                      !notEmptyBlock(blk_src)),
                                     (taintedLocal(id_src, blk_src, src, [id_jump, stack]),
                                      notContains(stack, id_jump)
                                      ;
                                      taintedLocal(id_src, blk_src, src, _),
                                      validBlkStack(blk, stack),
                                      !notContains(stack, id_jump)).

taintedGlobalBlkStart(field, blk, src, stack) :- return(_, blk_src),
                                                 jump(id_jump, _, blk_fn, blk),
                                                 blockFollows(blk_src, blk_fn),
                                                 (lastStmt(id_last, blk_src),
                                                  !selfdestruct(id_last, _)
                                                  ;
                                                  !notEmptyBlock(blk_src)),
                                                 (taintedGlobalBlkEnd(field, blk_src, src, [id_jump, stack]),
                                                  notContains(stack, id_jump)
                                                  ;
                                                  taintedGlobalBlkEnd(field, blk_src, src, _),
                                                  validBlkStack(blk, stack),
                                                  !notContains(stack, id_jump)).

#endif
